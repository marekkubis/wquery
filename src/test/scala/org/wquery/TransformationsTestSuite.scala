package org.wquery

import org.testng.annotations.Test

class TransformationsTestSuite extends WQueryTestSuite {    
  @Test def testSynsetsPos() = resultOf("{}.pos") should equal ("a\nn\ns\nv\n")
    
  @Test def testSynsetsHypernymsCount() = resultOf("count({}.hypernym)") should equal ("71\n")

  @Test def testSynsetsHyponymsCount() = resultOf("count({}.^hypernym)") should equal ("71\n")    

  @Test def testPerson1nSynsetDesc() = resultOf("{person:1:n}.desc") should equal ("a human being; \"there was too much for one person to do\"\n")

  @Test def testCarHyponyms() = resultOf("{car}.^hypernym") should equal ("{ ambulance:1:n }\n{ beach wagon:1:n station wagon:1:n wagon:5:n estate car:1:n beach waggon:1:n station waggon:1:n waggon:2:n }\n{ bus:4:n jalopy:1:n heap:3:n }\n{ cab:3:n hack:5:n taxi:1:n taxicab:1:n }\n{ compact:3:n compact car:1:n }\n{ convertible:1:n }\n{ coupe:1:n }\n{ cruiser:1:n police cruiser:1:n patrol car:1:n police car:1:n prowl car:1:n squad car:1:n }\n{ electric:1:n electric automobile:1:n electric car:1:n }\n{ gas guzzler:1:n }\n{ hardtop:1:n }\n{ hatchback:1:n }\n{ horseless carriage:1:n }\n{ hot rod:1:n hot-rod:1:n }\n{ jeep:1:n landrover:1:n }\n{ limousine:1:n limo:1:n }\n{ loaner:2:n }\n{ minicar:1:n }\n{ minivan:1:n }\n{ Model T:1:n }\n{ pace car:1:n }\n{ racer:2:n race car:1:n racing car:1:n }\n{ roadster:1:n runabout:1:n two-seater:1:n }\n{ sedan:1:n saloon:3:n }\n{ sports car:1:n sport car:1:n }\n{ sport utility:1:n sport utility vehicle:1:n S.U.V.:1:n SUV:1:n }\n{ Stanley Steamer:1:n }\n{ stock car:1:n }\n{ subcompact:1:n subcompact car:1:n }\n{ touring car:1:n phaeton:1:n tourer:2:n }\n{ used-car:1:n secondhand car:1:n }\n")    
           
  @Test def testCarHypernymsAndHyponyms() = resultOf("{car}.hypernym&^hypernym") should equal ("(no result)\n")    

  @Test def testSynsetsHoloPartsAndHoloPortionsCount() = resultOf("count({}.partial_holonym|member_holonym)") should equal ("7\n")    
    
  @Test def testRelationsUnionIntersectionPrecedense() = resultOf("count({}.hypernym|hypernym&^hypernym)") should equal ("71\n")    
    
  @Test def tesRelationsParenthesesPrecedence() = resultOf("count({}.(hypernym|hypernym)&^hypernym)") should equal ("0\n")    
    
  @Test def testCarTransitiveHyponyms() = resultOf("{car}.^hypernym!") should equal ("{ ambulance:1:n }\n{ beach wagon:1:n station wagon:1:n wagon:5:n estate car:1:n beach waggon:1:n station waggon:1:n waggon:2:n }\n{ berlin:3:n }\n{ brougham:2:n }\n{ bus:4:n jalopy:1:n heap:3:n }\n{ cab:3:n hack:5:n taxi:1:n taxicab:1:n }\n{ compact:3:n compact car:1:n }\n{ convertible:1:n }\n{ coupe:1:n }\n{ cruiser:1:n police cruiser:1:n patrol car:1:n police car:1:n prowl car:1:n squad car:1:n }\n{ electric:1:n electric automobile:1:n electric car:1:n }\n{ finisher:5:n }\n{ funny wagon:1:n }\n{ gas guzzler:1:n }\n{ gypsy cab:1:n }\n{ hardtop:1:n }\n{ hatchback:1:n }\n{ horseless carriage:1:n }\n{ hot rod:1:n hot-rod:1:n }\n{ jeep:1:n landrover:1:n }\n{ limousine:1:n limo:1:n }\n{ loaner:2:n }\n{ minicab:1:n }\n{ minicar:1:n }\n{ minivan:1:n }\n{ Model T:1:n }\n{ pace car:1:n }\n{ panda car:1:n }\n{ racer:2:n race car:1:n racing car:1:n }\n{ roadster:1:n runabout:1:n two-seater:1:n }\n{ sedan:1:n saloon:3:n }\n{ shooting brake:1:n }\n{ sports car:1:n sport car:1:n }\n{ sport utility:1:n sport utility vehicle:1:n S.U.V.:1:n SUV:1:n }\n{ Stanley Steamer:1:n }\n{ stock car:2:n }\n{ stock car:1:n }\n{ subcompact:1:n subcompact car:1:n }\n{ touring car:1:n phaeton:1:n tourer:2:n }\n{ used-car:1:n secondhand car:1:n }\n")    
        
  @Test def testCarOuterTransitiveHypernyms() = resultOf("{car:1}.<hypernym>!") should equal ("{ motor vehicle:1:n automotive vehicle:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n } { physical entity:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n } { physical entity:1:n } { entity:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n } { physical entity:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n } { physical entity:1:n } { entity:1:n }\n")    

  @Test def testCarOuterTransitiveHypernymsFiltered() = resultOf("{car:1}.<hypernym>![# != {vehicle:1:n}]") should equal ("{ motor vehicle:1:n automotive vehicle:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n } { physical entity:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { container:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n } { physical entity:1:n } { entity:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n } { physical entity:1:n }\n{ motor vehicle:1:n automotive vehicle:1:n } { self-propelled vehicle:1:n } { wheeled vehicle:1:n } { vehicle:1:n } { conveyance:3:n transport:1:n } { instrumentality:3:n instrumentation:1:n } { artifact:1:n artefact:1:n } { whole:2:n unit:6:n } { object:1:n physical object:1:n } { physical entity:1:n } { entity:1:n }\n")                                                                                                                                                                                    
                                                                                                                                                                                    
}
